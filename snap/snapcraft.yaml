name: ivpn # you probably want to 'snapcraft register <name>'
base: core18 # the base snap is the execution environment for this snap
version: '3.8.12' # this value will be used to stamp version for CLI and daemon

title: IVPN
summary: IVPN Client  # 79 char long summary
description: |
  IVPN for Desktop is the official IVPN app for desktop platforms.
  Some of the features include: multiple protocols (OpenVPN, WireGuard), Kill-switch, Multi-Hop, Trusted Networks, AntiTracker, Custom DNS, Dark mode, and more.


license: GPL-3.0
source-code: https://github.com/ivpn/desktop-app
issues: ['support@ivpn.net', 'alexandr.stelnykovych@ivpn.net', 'https://www.ivpn.net/contactus/']
contact: ['support@ivpn.net', 'alexandr.stelnykovych@ivpn.net', 'https://www.ivpn.net/contactus/']
website: https://www.ivpn.net

grade: devel # must be 'stable' to release into candidate/stable channels
confinement: strict # devmode #classic # use 'strict' once you have the right plugs and slots

# Manual connection of the required interfaces:
#   sudo snap connect ivpn:ivpn-dns-control
#   sudo snap connect ivpn:network-control
#   sudo snap connect ivpn:firewall-control

# ivpn-ui:
#   sudo snap connect ivpn-ui:port ivpn:port

# List of services:
#   snap services ivpn
# Restart daemon:
#   sudo snap restart ivpn.daemon
# Start stop daemon:
#   sudo snap stop ivpn.daemon
#   sudo snap start ivpn.daemon
# See logs realtime:
#   sudo snap logs ivpn.daemon -f
# See logs:
#   sudo snap logs -n=all ivpn.daemon

apps:
  daemon:
    command: bin/ivpn-service
    daemon: simple
    restart-condition: always
    stop-mode: sigterm    
    plugs:
      - network-control   # Ability to establish a VPN connection
      - firewall-control  # Ability to control firewall rules (iptables)
      - network-bind      # Ability to listen for incoming connections from clients (cli, ui)

  ivpn:
    command: bin/ivpn
    plugs:
      - network           # Ability to connect to a daemon (localhost)

hooks:
  remove:
    plugs: [network, firewall-control]

plugs:
  ivpn-dns-control:
    interface: system-files
    write:
      - /etc/resolv.conf
      - /etc/resolv.conf.ivpnsave
    read:
      - /etc/resolv.conf
      - /etc/resolv.conf.ivpnsave
slots:
  port:
    interface: content
    content: file
    read: 
      - $SNAP_COMMON/opt/ivpn/mutable

parts:
  daemon:
    plugin: nil
    build-snaps:
      - go      
    build-packages:
      - libiw30           # libiw for wifiNotifier functionality
      - libiw-dev         # libiw for wifiNotifier functionality
      - curl
    stage-packages:
      - openvpn                 
      #- mount             # ability to mount cgroup (for split-tunneling functionality)      
    source: .
    source-subdir: daemon
    override-build: |
      daemon/References/Linux/scripts/build-daemon.sh -v $SNAPCRAFT_PROJECT_VERSION
      mkdir -p $SNAPCRAFT_PART_INSTALL/bin
      cp daemon/References/Linux/scripts/_out_bin/ivpn-service $SNAPCRAFT_PART_INSTALL/bin

  cli:
    plugin: nil
    build-snaps:
      - go      
    build-packages:
      - git
    source: .
    source-subdir: cli
    override-build: |
      cli/References/Linux/compile-cli.sh -v $SNAPCRAFT_PROJECT_VERSION
      mkdir -p $SNAPCRAFT_PART_INSTALL/bin
      cp cli/References/Linux/_out_bin/ivpn $SNAPCRAFT_PART_INSTALL/bin

  wireguard-tools:
    plugin: nil
    build-snaps:
    - go
    build-packages:
    - git
    source: ./daemon/References/Linux
    override-build: |    
      rm -fr ./_deps/wireguard-tools*  
      ./scripts/build-wireguard-tools.sh
      mkdir -p $SNAPCRAFT_PART_INSTALL/opt/ivpn/wireguard-tools
      cp _deps/wireguard-tools_inst/wg-quick $SNAPCRAFT_PART_INSTALL/opt/ivpn/wireguard-tools/wg-quick
      cp _deps/wireguard-tools_inst/wg $SNAPCRAFT_PART_INSTALL/opt/ivpn/wireguard-tools/wg

  dnscrypt-proxy:
    plugin: nil
    build-snaps:
    - go
    build-packages:
    - git
    source: ./daemon/References/Linux
    override-build: |
      rm -fr ./_deps/dnscryptproxy*
      ./scripts/build-dnscrypt-proxy.sh
      mkdir -p $SNAPCRAFT_PART_INSTALL/opt/ivpn/dnscrypt-proxy 
      cp _deps/dnscryptproxy_inst/dnscrypt-proxy $SNAPCRAFT_PART_INSTALL/opt/ivpn/dnscrypt-proxy/dnscrypt-proxy 

  obfs4proxy:
    plugin: nil
    build-snaps:
    - go
    build-packages:
    - git
    source: ./daemon/References/Linux
    override-build: |
      rm -fr ./_deps/obfs4proxy*
      ./scripts/build-obfs4proxy.sh
      mkdir -p $SNAPCRAFT_PART_INSTALL/opt/ivpn/obfsproxy
      cp _deps/obfs4proxy_inst/obfs4proxy $SNAPCRAFT_PART_INSTALL/opt/ivpn/obfsproxy/obfs4proxy

  etc:
    plugin: dump
    source: ./daemon/References/Linux/etc
    organize:
      "*": opt/ivpn/etc/
    override-build: |
      snapcraftctl build
      chmod 0400 *
      chmod 0600 servers.json
      chmod 0700 *.sh
      chmod 0700 *.up
      chmod 0700 *.down