name: Native aarch64/arm64 build
on:
  workflow_dispatch:
    inputs:
      tag:
        description: Build for a specific tag
        required: false
        default: ""
        type: string
  push:
    tags:
      - "*"
jobs:
  aarch64:
    runs-on: buildjet-4vcpu-ubuntu-2204-arm
    env:
      IVPN_BUILD_SKIP_GLIBC_VER_CHECK: "1"
    permissions:
      contents: write
    steps:
      # on workflow_dispatch with a specific tag, checkout the tag and build
      - uses: actions/checkout@v4.1.7
        id: tag-requested
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.tag != ''}}
        with:
          ref: ${{ inputs.tag }}

      - uses: actions/checkout@v4
        if: ${{ !(github.event_name == 'workflow_dispatch' && inputs.tag != '')}}
        with:
          ref: ${{ github.ref }}

      - name: Install Apt dependencies
        run: |
          sudo apt update -yq
          sudo apt-get install -yqq rpm libiw-dev gcc libssl-dev unzip xsltproc doxygen graphviz valgrind ruby ruby-dev astyle cmake ninja-build

      - name: Setup Go
        uses: buildjet/setup-go@v5
        with:
          go-version: "1.21"
          cache: true
          cache-dependency-path: |
            **/go.mod
            **/go.sum
          
      - name: Setup node
        uses: buildjet/setup-node@v4
        with:
          node-version: 18.x #lts/*
          cache: npm
          cache-dependency-path: |
            ui/package.json
            ui/package-lock.json

      #buggy  at the moment?
      #- name: Setup Ruby
      #  uses: buildjet/setup-ruby@v1
      #  with:
      #    ruby-version: 3.0.1
      #    bundler-cache: true
      #    rubygems: default
      #    self-hosted: true
      - run: sudo gem install dotenv && sudo gem install fpm

      - name: Setup Python
        uses: buildjet/setup-python@v5
        with:
          python-version: '3.10'
          cache: pip
          cache-dependency-path: requirements.txt

      - name: Build CLI
        run: |
          echo "::group::Build CLI"
          cd cli/References/Linux
          # flush GITHUB_ACTIONS to bypass checks in build.sh
          GITHUB_ACTIONS= ./build.sh -v $(cat ../../../ui/package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g')

      - name: Build UI
        run: |
          echo "::group::Build UI"
          cd ui/References/Linux
          # flush GITHUB_ACTIONS to bypass checks in build.sh
          GITHUB_ACTIONS= ./build.sh -v $(cat ../../package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g')

      - name: Process artifacts
        run: |
          mkdir -p buildoutput
          mv cli/References/Linux/_out_bin/* buildoutput/
          mv ui/References/Linux/_out_bin/* buildoutput/

          cd buildoutput
          find . -name "ivpn*" | xargs -I {} tar czvf {}.tar.gz {}
          sha256sum *.tar.gz > sha256sums.txt

      - name: Build Release Markdown
        run: |
          if [[ ${{ github.event_name == 'workflow_dispatch' && inputs.tag  != '' }} ]]; then
            TAG="${{ inputs.tag }}"
          else
            TAG="$(echo ${{ github.ref }} | sed 's/refs\/tags\///')"
          fi

          echo "## IVPN for Desktop - Community Build for linux/aarch64 $TAG" > buildoutput/release.md
          echo "" >> buildoutput/release.md
          echo "### Buildtime: $(date)" >> buildoutput/release.md
          echo "" >> buildoutput/release.md
          echo "### Checksums" >> buildoutput/release.md
          echo "File | SHA256" >> buildoutput/release.md
          echo "---- | ------" >> buildoutput/release.md
          cat buildoutput/sha256sums.txt | awk '{print $2 " | " $1}' >> buildoutput/release.md
          echo "" >> buildoutput/release.md
          echo "[Official Changelog](https://github.com/ivpn/desktop-app/blob/master/CHANGELOG.md)" >> buildoutput/release.md
          echo "" >> buildoutput/release.md

          echo "::debug ::release markdown created at buildoutput/release.md"
          cat buildoutput/release.md

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: |
            buildoutput/*.tar.gz
            buildoutput/sha256sums.txt
            buildoutput/release.md

      - name: Upload new release
        if: ${{ (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')) || (github.event_name == 'workflow_dispatch' && inputs.tag != '')}}
        uses: ncipollo/release-action@v1
        with:
          artifacts: buildoutput/*.tar.gz, buildoutput/sha256sums.txt
          bodyFile: buildoutput/release.md