# use -P ubuntu-latest=-self-hosted when running this action locally with act to avoid docker-in-docker issues
name: aarch64 shimloader
on:
  workflow_dispatch:
    inputs:
      tag:
        description: Build for a specific tag
        required: false
        default: ""
        type: string
  push:
    tags:
      - "*"

jobs:
  shimload:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    name: aarch64 shimloader
    steps:
      - name: parse invocation
        run: |
          echo "::debug ::shim_arm64.yml payload was invoked by ${{ github.actor }}"
          echo "::debug ::running on ${{ runner.os }}"
          echo "::debug ::running on $(uname -m) architecture"
          echo "::debug ::running on $(uname -r) kernel"
          echo "::debug ::invocaion was triggered by ${{ github.event_name }}"

          if [[ ${{ github.event_name == 'workflow_dispatch' && inputs.tag != '' }} ]]; then
            echo "::debug ::custom build for tag ${{ inputs.tag }} requested by ${{ github.actor }}"
          fi

      # on tag push or workflow displatch without a specific tag, checkout the tag/most recent commit and build
      - uses: actions/checkout@v4
        if: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && inputs.tag == '')}}
        with:
          ref: ${{ github.ref }}

      # on workflow_dispatch with a specific tag, checkout the tag and build
      - uses: actions/checkout@v4
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.tag != ''}}
        with:
          ref: ${{ inputs.tag }}

      - name: Install act runner
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/nektos/act/master/install.sh | sudo bash
          echo "$(pwd)/bin" >> $GITHUB_PATH

      - name: Install binfmt aarch64
        run: |
          docker run --privileged --rm tonistiigi/binfmt --install arm64

      - name: Shimloading aarch64 environment
        id: shimload
        run: |
          mkdir -p buildoutput
          echo "::debug ::shimloading aarch64 environment for workflow .github/workflows/build_arm64.yml"
          act -W ./.github/workflows/build_arm64.yml -P ubuntu-latest=catthehacker/ubuntu:act-22.04 --container-architecture linux/arm64 --bind

      - name: Fix file ownership
        run: |
          # prevent permission errors because we bound directly into the container
          sudo chown -R $USER:$USER .

      - name: Tar and hash artifacts for upload
        run: |
          cd buildoutput
          find . -name "ivpn*" | xargs -I {} tar czvf {}.tar.gz {}
          sha256sum *.tar.gz > sha256sums.txt

      - name: Build Release Markdown
        run: |
          [[ ${{ github.event_name }} == 'workflow_dispatch' && inputs.tag != '' ]]; then
            TAG=${{ inputs.tag }}
          else
            TAG=$(${{ github.ref }} | sed 's/refs\/tags\///')
          fi
          echo "## IVPN for Desktop - Community Build for linux/aarch64 $TAG" > buildoutput/release.md
          echo "" >> buildoutput/release.md
          echo "### Buildtime: $(date)" >> buildoutput/release.md
          echo "" >> buildoutput/release.md
          echo "### Checksums" >> buildoutput/release.md
          echo "File | SHA256" >> buildoutput/release.md
          echo "---- | ------" >> buildoutput/release.md
          cat buildoutput/sha256sums.txt | awk '{print $2 " | " $1}' >> buildoutput/release.md
          echo "" >> buildoutput/release.md
          echo "[Official Changelog](https://github.com/ivpn/desktop-app/blob/master/CHANGELOG.md)
          echo "" >> buildoutput/release.md

          echo "::debug ::release markdown created at buildoutput/release.md"
          cat buildoutput/release.md

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: buildoutput/*.tar.gz, buildoutput/sha256sums.txt, buildoutput/release.md

      - name: upload new release
        if: ${{ (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')) || (github.event_name == 'workflow_dispatch' && inputs.tag != '')}}
        uses: ncipollo/release-action@v1
        with:
          artifacts: buildoutput/*.tar.gz, buildoutput/sha256sums.txt
          body: buildoutput/release.md
